"""add billing, plans and services tables

Revision ID: cac11da3dc4c
Revises: 646c9a39d818
Create Date: 2025-06-26 00:21:21.042756

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cac11da3dc4c'
down_revision: Union[str, None] = '646c9a39d818'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('billing_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('fine_percent', sa.Float(), nullable=True),
    sa.Column('fine_type', sa.Enum('daily', 'monthly', name='finetype'), nullable=False),
    sa.Column('interest_percent', sa.Float(), nullable=True),
    sa.Column('interest_type', sa.Enum('daily', 'monthly', name='interesttype'), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', 'archived', name='billingaccountstatus'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('billing_account_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('download_speed', sa.Integer(), nullable=False),
    sa.Column('upload_speed', sa.Integer(), nullable=False),
    sa.Column('auto_block', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', name='planstatus'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['billing_account_id'], ['billing_accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customer_services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('login_pppoe', sa.String(), nullable=False),
    sa.Column('password_pppoe', sa.String(), nullable=False),
    sa.Column('subscriber_password', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('active', 'suspended', 'canceled', name='customerservicestatus'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login_pppoe')
    )
    op.create_table('billings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_service_id', sa.Integer(), nullable=False),
    sa.Column('billing_account_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('due_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('paid_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'paid', 'canceled', 'failed', name='billingstatus'), nullable=False),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('barcode', sa.String(), nullable=True),
    sa.Column('pdf_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['billing_account_id'], ['billing_accounts.id'], ),
    sa.ForeignKeyConstraint(['customer_service_id'], ['customer_services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_foreign_key(None, 'customer_contracts', 'customer_services', ['customer_service_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'customer_contracts', type_='foreignkey')
    op.drop_table('billings')
    op.drop_table('customer_services')
    op.drop_table('plans')
    op.drop_table('billing_accounts')
    # ### end Alembic commands ###
