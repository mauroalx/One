"""Initial migrations

Revision ID: a4ede35139a3
Revises: 
Create Date: 2025-06-29 16:31:40.682630

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a4ede35139a3'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('billing_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('fine_percent', sa.Float(), nullable=True),
    sa.Column('fine_type', sa.Enum('daily', 'monthly', name='finetype'), nullable=False),
    sa.Column('interest_percent', sa.Float(), nullable=True),
    sa.Column('interest_type', sa.Enum('daily', 'monthly', name='interesttype'), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', 'archived', name='billingaccountstatus'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contracts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('draft', 'active', 'archived', name='contractstatus'), nullable=False),
    sa.Column('type', sa.Enum('PF', 'PJ', 'custom', name='contracttype'), nullable=False),
    sa.Column('months', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contracts_id'), 'contracts', ['id'], unique=False)
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('individual', 'company', name='customertype'), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('trade_name', sa.String(), nullable=True),
    sa.Column('legal_name', sa.String(), nullable=True),
    sa.Column('document', sa.String(), nullable=False),
    sa.Column('rg', sa.String(), nullable=True),
    sa.Column('mother_name', sa.String(), nullable=True),
    sa.Column('father_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('mobile1', sa.String(), nullable=True),
    sa.Column('mobile2', sa.String(), nullable=True),
    sa.Column('fax', sa.String(), nullable=True),
    sa.Column('address_street', sa.String(), nullable=False),
    sa.Column('address_number', sa.String(), nullable=False),
    sa.Column('address_complement', sa.String(), nullable=True),
    sa.Column('address_neighborhood', sa.String(), nullable=False),
    sa.Column('address_city', sa.String(), nullable=False),
    sa.Column('address_state', sa.String(), nullable=False),
    sa.Column('address_zipcode', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_customers_document'), 'customers', ['document'], unique=True)
    op.create_table('nas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nasname', sa.String(length=128), nullable=False),
    sa.Column('shortname', sa.String(length=32), nullable=True),
    sa.Column('type', sa.String(length=30), nullable=True),
    sa.Column('ports', sa.Integer(), nullable=True),
    sa.Column('secret', sa.String(length=60), nullable=False),
    sa.Column('server', sa.String(length=64), nullable=True),
    sa.Column('community', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('radacct',
    sa.Column('radacctid', sa.BigInteger(), nullable=False),
    sa.Column('acctsessionid', sa.String(length=64), nullable=True),
    sa.Column('acctuniqueid', sa.String(length=32), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('realm', sa.String(length=64), nullable=True),
    sa.Column('nasipaddress', sa.String(length=15), nullable=True),
    sa.Column('nasportid', sa.String(length=15), nullable=True),
    sa.Column('nasporttype', sa.String(length=32), nullable=True),
    sa.Column('acctstarttime', sa.DateTime(), nullable=True),
    sa.Column('acctstoptime', sa.DateTime(), nullable=True),
    sa.Column('acctsessiontime', sa.Integer(), nullable=True),
    sa.Column('acctauthentic', sa.String(length=32), nullable=True),
    sa.Column('connectinfo_start', sa.String(length=32), nullable=True),
    sa.Column('connectinfo_stop', sa.String(length=32), nullable=True),
    sa.Column('acctinputoctets', sa.BigInteger(), nullable=True),
    sa.Column('acctoutputoctets', sa.BigInteger(), nullable=True),
    sa.Column('calledstationid', sa.String(length=50), nullable=True),
    sa.Column('callingstationid', sa.String(length=50), nullable=True),
    sa.Column('acctterminatecause', sa.String(length=32), nullable=True),
    sa.Column('servicetype', sa.String(length=32), nullable=True),
    sa.Column('framedprotocol', sa.String(length=32), nullable=True),
    sa.Column('framedipaddress', sa.String(length=15), nullable=True),
    sa.PrimaryKeyConstraint('radacctid'),
    sa.UniqueConstraint('acctuniqueid')
    )
    op.create_table('radcheck',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('attribute', sa.String(length=64), nullable=False),
    sa.Column('op', sa.String(length=2), nullable=False),
    sa.Column('value', sa.String(length=253), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('radgroupcheck',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('groupname', sa.String(length=64), nullable=False),
    sa.Column('attribute', sa.String(length=64), nullable=False),
    sa.Column('op', sa.String(length=2), nullable=False),
    sa.Column('value', sa.String(length=253), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('radgroupreply',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('groupname', sa.String(length=64), nullable=False),
    sa.Column('attribute', sa.String(length=64), nullable=False),
    sa.Column('op', sa.String(length=2), nullable=False),
    sa.Column('value', sa.String(length=253), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('radpostauth',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('pass', sa.String(length=64), nullable=False),
    sa.Column('reply', sa.String(length=32), nullable=False),
    sa.Column('authdate', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('radreply',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('attribute', sa.String(length=64), nullable=False),
    sa.Column('op', sa.String(length=2), nullable=False),
    sa.Column('value', sa.String(length=253), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('radusergroup',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('groupname', sa.String(length=64), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('permissions', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('acronym', sa.String(length=2), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('acronym'),
    sa.UniqueConstraint('name')
    )
    op.create_table('cities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('state_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['state_id'], ['states.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'state_id', name='uq_city_state')
    )
    op.create_table('plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('billing_account_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('download_speed', sa.Integer(), nullable=False),
    sa.Column('upload_speed', sa.Integer(), nullable=False),
    sa.Column('auto_block', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', name='planstatus'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['billing_account_id'], ['billing_accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('enabled', 'disabled', name='userstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('customer_services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('login_pppoe', sa.String(), nullable=False),
    sa.Column('password_pppoe', sa.String(), nullable=False),
    sa.Column('subscriber_password', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('active', 'suspended', 'canceled', name='customerservicestatus'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login_pppoe')
    )
    op.create_table('districts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state_id', sa.Integer(), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('zipcode', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
    sa.ForeignKeyConstraint(['state_id'], ['states.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('city_id', 'name', name='uq_district_city_name')
    )
    op.create_table('billings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_service_id', sa.Integer(), nullable=False),
    sa.Column('billing_account_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('due_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('paid_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'paid', 'canceled', 'failed', name='billingstatus'), nullable=False),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('barcode', sa.String(), nullable=True),
    sa.Column('pdf_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['billing_account_id'], ['billing_accounts.id'], ),
    sa.ForeignKeyConstraint(['customer_service_id'], ['customer_services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customer_addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_service_id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=2), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('neighborhood', sa.String(), nullable=False),
    sa.Column('street', sa.String(), nullable=False),
    sa.Column('zipcode', sa.String(), nullable=False),
    sa.Column('number', sa.String(), nullable=False),
    sa.Column('complement', sa.String(), nullable=True),
    sa.Column('reference', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['customer_service_id'], ['customer_services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customer_contracts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_service_id', sa.Integer(), nullable=False),
    sa.Column('final_text', sa.Text(), nullable=False),
    sa.Column('text_hash', sa.Text(), nullable=False),
    sa.Column('signed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['customer_service_id'], ['customer_services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_customer_contracts_id'), 'customer_contracts', ['id'], unique=False)
    op.create_table('streets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('district_id', 'name', name='uq_street_district_name')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('streets')
    op.drop_index(op.f('ix_customer_contracts_id'), table_name='customer_contracts')
    op.drop_table('customer_contracts')
    op.drop_table('customer_addresses')
    op.drop_table('billings')
    op.drop_table('districts')
    op.drop_table('customer_services')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('plans')
    op.drop_table('cities')
    op.drop_table('states')
    op.drop_table('roles')
    op.drop_table('radusergroup')
    op.drop_table('radreply')
    op.drop_table('radpostauth')
    op.drop_table('radgroupreply')
    op.drop_table('radgroupcheck')
    op.drop_table('radcheck')
    op.drop_table('radacct')
    op.drop_table('nas')
    op.drop_index(op.f('ix_customers_document'), table_name='customers')
    op.drop_table('customers')
    op.drop_index(op.f('ix_contracts_id'), table_name='contracts')
    op.drop_table('contracts')
    op.drop_table('billing_accounts')
    # ### end Alembic commands ###